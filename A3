#!/usr/bin/env python
from __future__ import print_function, division
# http://www-personal.umich.edu/~mejn/computational-physics/

from pylab import scatter, xlabel, ylabel, xlim, ylim, show
from numpy import loadtxt
import matplotlib.pyplot as plt

data = loadtxt("C:\\Users\\Benjam√≠n\\Downloads\\stars.dat", float)
x = data[:, 0]
y = data[:, 1]

fig = plt.figure(figsize = (15, 12))

scatter(x, y)
plt.xlabel("Temperature")
plt.ylabel("Magnitude")
plt.xlim(0, 13000)
plt.ylim(-5, 20)
plt.show(15, 7.5)

# Se incluye la imgen generada en "https://mega.nz/folder/pctAhSBY#P7f565xOME_9Uv5qdGo05w" con el nombre de "stars.png"

"""-------------------------------------------------------------------------"""

#  RK4.PY 4th Order Runge Kutta solution of ODE
from numpy import zeros
from vpython import *

#  initialization
a = 0.;     b = 10.;    n = 100
ydumb = zeros((2), float); y = zeros((2), float); fReturn = zeros((2), float)
y[0] = 3.; y[1] = -5.;  t = a;  h = (b-a)/n;

def f(t, y, fReturn):
    fReturn[0] = y[1]
    fReturn[1] = -9*y[0] - 2*y[1] + 9*sin(3.*t)


def rk4Function(h, fReturn):
    k1 = zeros ((2), float); k2 = zeros ((2), float); k3 = zeros ((2), float); k4 = zeros ((2), float)
    k1[0] = h*fReturn[0]; k1[1] = h*fReturn[1]
    for i in range(0, 2):
        ydumb[i] = y[i] + k1[i]/2.
    f(t + h/2., ydumb, fReturn)

    k2[0] = h * fReturn[0]; k2[1] = h * fReturn[1]
    for i in range(0, 2):
        ydumb[i] = y[i] + k2[i]/2.
    f(t + h/2., ydumb, fReturn)

    k3[0] = h * fReturn[0]; k3[1] = h * fReturn[1]
    for i in range(0, 2):
        ydumb[i] = y[i] + k3[i]
    f(t + h, ydumb, fReturn)

    k4[0] = h * fReturn[0]; k4[1] = h * fReturn[1]
    for i in range(0, 2):
        y[i] = y[i] + (k1[i]+2.*(k2[i]+k3[i])+k4[i])/6.

graph1 = graph(x = 0, y = 0, width = 400, height = 400, title = "RK4", xtitle = "t", ytitle = "y[0]", xmin = 0, xmax = 10, ymin = -2, ymax = 3)
funct1 = gcurve(color = color.blue)
graph2 = graph(x = 400, y = 0, width = 400, height = 400, title = "RK4", xtitle = "t", ytitle = "y[1]", xmin = 0, xmax = 10, ymin = -25, ymax = 18)
funct2 = gcurve(color = color.red)
funct1.plot(pos = (t, y[0]))
funct1.plot(pos = (t, y[1]))

while t < b:
    if (t+h)>b:
        h = b-t
    rk4Function(h, fReturn)
    t = t + h
    rate(30)
    funct1.plot(pos = (t, y[0]))
    funct2.plot(pos = (t, y[1]))
   
# Se incluye la imgen generada en "https://mega.nz/folder/pctAhSBY#P7f565xOME_9Uv5qdGo05w" con el nombre de "RK4_BL.png" y "RK4_RL"
